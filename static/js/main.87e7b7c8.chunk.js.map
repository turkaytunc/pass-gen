{"version":3,"sources":["util/generate-random-number.js","util/generate-password.js","components/use-password/use-password.js","components/generate-password.js/gen-pass.js","components/display-password/display-password.js","App.js","index.js"],"names":["generateRandomNumber","min","max","Math","floor","random","generateUppercase","rand","String","fromCharCode","generateLowercase","generatePunctuation","length","usePassword","useState","password","setPassword","isUpper","isLower","isPunctuation","funcArr","push","result","i","concat","generatePassword","GenPass","pass","marks","setMarks","handleCheckboxChange","event","states","name","target","key","hasOwnProperty","className","htmlFor","type","style","width","height","value","onChange","e","onClick","text","src","process","alt","DisplayPassword","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87e7b7c8.chunk.js","sourcesContent":["export const generateRandomNumber = (min = 0, max = 0) => {\n  return Math.floor(Math.random() * (max - min)) + min;\n};\n","import { generateRandomNumber } from './generate-random-number';\n\nexport const generatePassword = (\n  length = 0,\n  isUpper = false,\n  isLower = false,\n  isPunctuation = false\n) => {\n  if (length <= 0 || length > 30) return '';\n  if ((isLower || isUpper || isPunctuation) === false) return '';\n  let funcArr = [];\n  if (isUpper) funcArr.push(generateUppercase);\n  if (isLower) funcArr.push(generateLowercase);\n  if (isPunctuation) funcArr.push(generatePunctuation);\n\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    const rand = generateRandomNumber(0, funcArr.length);\n    result = result.concat(funcArr[rand]());\n  }\n\n  return result;\n};\n\nconst generateUppercase = () => {\n  const rand = generateRandomNumber(65, 90);\n\n  return String.fromCharCode(rand);\n};\nconst generateLowercase = () => {\n  const rand = generateRandomNumber(97, 122);\n\n  return String.fromCharCode(rand);\n};\nconst generatePunctuation = () => {\n  const puncString = '$#().,<>?=+*&!';\n  const rand = generateRandomNumber(0, puncString.length - 1);\n  return puncString[rand];\n};\n","import { useState } from 'react';\nimport { generatePassword } from '../../util/generate-password';\n\nexport default function usePassword() {\n  const [password, setPassword] = useState('');\n  function pass({ length, isUpper, isLower, isPunctuation }) {\n    const password = generatePassword(length, isUpper, isLower, isPunctuation);\n\n    setPassword(password);\n  }\n\n  return [password, pass];\n}\n","import React, { useState } from 'react';\nimport usePassword from '../use-password/use-password';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport './gen-pass.scss';\n\nexport const GenPass = () => {\n  const [password, pass] = usePassword();\n  const [marks, setMarks] = useState({\n    length: 20,\n    isUpper: false,\n    isLower: false,\n    isPunctuation: false,\n  });\n\n  const handleGenerateButton = () => {\n    pass(marks);\n  };\n\n  const handleCheckboxChange = (event) => {\n    let states = { ...marks };\n    let name = event.target.name;\n\n    for (const key in states) {\n      if (states.hasOwnProperty(key) && name === key) {\n        setMarks({ ...marks, [key]: name });\n      }\n    }\n  };\n\n  return (\n    <div className=\"generate-pass\">\n      <div className=\"checkbox-div\">\n        <div className=\"label-wrapper\">\n          <label htmlFor=\"length\">Length </label>\n          <label htmlFor=\"isUpper\">Uppercase</label>\n          <label htmlFor=\"isLower\">Lowercase</label>\n          <label htmlFor=\"isPunctuation\">Punctuation</label>\n        </div>\n        <div className=\"input-wrapper\">\n          <input\n            type=\"number\"\n            style={{ width: '50px', height: '15px' }}\n            value={marks.length}\n            onChange={(e) => setMarks({ ...marks, length: e.target.value })}\n            name=\"length\"\n          />\n          <input\n            value=\"isUpper\"\n            type=\"checkbox\"\n            name=\"isUpper\"\n            onChange={(e) => handleCheckboxChange(e)}\n          />\n          <input\n            type=\"checkbox\"\n            name=\"isLower\"\n            onChange={(e) => handleCheckboxChange(e)}\n          />\n          <input\n            type=\"checkbox\"\n            name=\"isPunctuation\"\n            onChange={(e) => handleCheckboxChange(e)}\n          />\n        </div>\n      </div>\n      <div>\n        <button\n          className=\"generate-button\"\n          onClick={() => handleGenerateButton()}\n        >\n          Generate Password\n        </button>\n      </div>\n      <div className=\"pass-container\">\n        <p>{password}</p>\n      </div>\n      <div>\n        <CopyToClipboard text={password}>\n          <img\n            height=\"32px\"\n            src={`${process.env.PUBLIC_URL}/static-files/clipboard-icon.png`}\n            alt=\"clipboard\"\n          />\n        </CopyToClipboard>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { GenPass } from '../generate-password.js/gen-pass';\nimport './display-password.scss';\n\nexport const DisplayPassword = () => {\n  return (\n    <div>\n      <p className=\"simple-pass\">Simple Password Generator</p>\n      <GenPass></GenPass>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { DisplayPassword } from './components/display-password/display-password';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DisplayPassword />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}